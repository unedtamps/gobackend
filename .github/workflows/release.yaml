name: ci
on:
  push:
    branches:
      - 'master'
jobs:
  test:
    name: golang-test
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: appdb
        # Set health checks to wait until postgres has started/ is ready to accept connections
        options: >-
          --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
        # expose port
        ports:
          - 5432:5432
      redis:
        # Docker Hub image
        image: redis
        # Set health checks to wait until redis has started
        env:
          REDIS_PASSWORD: password
          REDIS_DB: 0
          REDIS_HOST: redis
          REDIS_PORT: 6379
        options: >-
          --health-cmd "redis-cli ping" --health-interval 10s --health-timeout 5s --health-retries 5
        ports:
          - 6379:6379
    steps:
      - name: Set up Go 1.21.7
        uses: actions/setup-go@v4
        with:
          go-version: 1.21.7
        id: go
      - name: Check out code into the Go module directory
        uses: actions/checkout@v4
      - name: Install migrate
        run: |
          curl -L https://github.com/golang-migrate/migrate/releases/download/v4.17.0/migrate.linux-amd64.tar.gz | tar xvz
          sudo mv ./migrate /usr/bin/migrate
          which migrate
      - name: Install sqlc
        run: |
          curl -L https://github.com/sqlc-dev/sqlc/releases/download/v1.25.0/sqlc_1.25.0_linux_amd64.tar.gz | tar xvz
          sudo mv ./sqlc /usr/bin/sqlc
          which sqlc
      - name: Run migration
        run: migrate -path internal/migration -database "postgres://postgres:password@localhost:5432/appdb?sslmode=disable" -verbose up
      - name: Run sqlc generate
        run: DB_URI="postgres://postgres:password@localhost:5432/appdb?sslmode=disable" sqlc generate
      - name: Run tests
        run: make test
  docker:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          push: true
          context: .
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_REPO }}:latest
  deploy:
    needs: docker
    runs-on: ubuntu-latest
    steps:
      - name: multiple command
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          port: ${{ secrets.PORT }}
          script: |
            cd  /var/www/golang-backend
            docker compose down
            docker compose up -d --pull always
